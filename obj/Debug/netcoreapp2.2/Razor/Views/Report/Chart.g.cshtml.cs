#pragma checksum "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f0643bae07aa8fca6e9cc76e8a83ccc8c1565d69"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Report_Chart), @"mvc.1.0.view", @"/Views/Report/Chart.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Report/Chart.cshtml", typeof(AspNetCore.Views_Report_Chart))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\_ViewImports.cshtml"
using DanceClubs;

#line default
#line hidden
#line 2 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\_ViewImports.cshtml"
using DanceClubs.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f0643bae07aa8fca6e9cc76e8a83ccc8c1565d69", @"/Views/Report/Chart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e19d7d478353f2c5563b105eb2e6d82fb69e898", @"/Views/_ViewImports.cshtml")]
    public class Views_Report_Chart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ReportModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(20, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
  
    var reportType = "Trening";
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report[reportType].Select(x => x.Month).ToList());
    var YValuesClasses = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report[reportType].Select(x => x.Quantity).ToList());
    var Classes = Newtonsoft.Json.JsonConvert.SerializeObject(reportType);

    reportType = "Proba";
    var YValuesRehearsals = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report[reportType].Select(x => x.Quantity).ToList());
    var Rehearsals = Newtonsoft.Json.JsonConvert.SerializeObject(reportType);

    reportType = "Nastup";
    var YValuesPerformances = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report[reportType].Select(x => x.Quantity).ToList());
    var Performances = Newtonsoft.Json.JsonConvert.SerializeObject(reportType);

    reportType = "ÄŒlanarine";
    var YValuesMembershipFees = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report[reportType].Select(x => x.Quantity).ToList());
    var MembershipFees = Newtonsoft.Json.JsonConvert.SerializeObject(reportType);

#line default
#line hidden
            BeginContext(1128, 695, true);
            WriteLiteral(@"
<div class=""box-body"">
    <div class=""chart-container"">
        <canvas id=""chart"" style=""width:100%; height:500px""></canvas>
    </div>
</div>
<br />
<br />
<div class=""box-body"">
    <div class=""chart-container"">
        <canvas id=""chart2"" style=""width:100%; height:500px""></canvas>
    </div>
</div>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js""></script>
<script src=""https://code.jquery.com/jquery-3.3.1.min.js""></script>

<script type=""text/javascript"">

    $(function () {
        var chartName = ""chart"";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
            labels: ");
            EndContext();
            BeginContext(1824, 17, false);
#line 44 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
               Write(Html.Raw(XLabels));

#line default
#line hidden
            EndContext();
            BeginContext(1841, 60, true);
            WriteLiteral(",\r\n                datasets: [{\r\n                    label: ");
            EndContext();
            BeginContext(1902, 17, false);
#line 46 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                      Write(Html.Raw(Classes));

#line default
#line hidden
            EndContext();
            BeginContext(1919, 190, true);
            WriteLiteral(",\r\n                    backgroundColor: \'rgba(200, 0, 150, 0.3)\',\r\n                    borderColor: \'rgba(200, 0, 150, 0.3)\',\r\n                    borderWidth: 1,\r\n                    data: ");
            EndContext();
            BeginContext(2110, 24, false);
#line 50 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                     Write(Html.Raw(YValuesClasses));

#line default
#line hidden
            EndContext();
            BeginContext(2134, 68, true);
            WriteLiteral("\r\n                },\r\n                {\r\n                    label: ");
            EndContext();
            BeginContext(2203, 20, false);
#line 53 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                      Write(Html.Raw(Rehearsals));

#line default
#line hidden
            EndContext();
            BeginContext(2223, 186, true);
            WriteLiteral(",\r\n                    backgroundColor: \'rgba(0, 0, 200, 0.3)\',\r\n                    borderColor: \'rgba(0, 0, 200, 0.3)\',\r\n                    borderWidth: 1,\r\n                    data: ");
            EndContext();
            BeginContext(2410, 27, false);
#line 57 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                     Write(Html.Raw(YValuesRehearsals));

#line default
#line hidden
            EndContext();
            BeginContext(2437, 68, true);
            WriteLiteral("\r\n                },\r\n                {\r\n                    label: ");
            EndContext();
            BeginContext(2506, 22, false);
#line 60 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                      Write(Html.Raw(Performances));

#line default
#line hidden
            EndContext();
            BeginContext(2528, 190, true);
            WriteLiteral(",\r\n                    backgroundColor: \'rgba(76, 175, 80, 0.3)\',\r\n                    borderColor: \'rgba(76, 175, 80, 0.3)\',\r\n                    borderWidth: 1,\r\n                    data: ");
            EndContext();
            BeginContext(2719, 29, false);
#line 64 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                     Write(Html.Raw(YValuesPerformances));

#line default
#line hidden
            EndContext();
            BeginContext(2748, 1174, true);
            WriteLiteral(@"
                }]
        };

        var options = {
                maintainAspectRatio: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: false
                        },
                        gridLines: {
                            display: true,
                            color: ""rgba(255,99,164,0.2)""
                        }
                }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
        };

        var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type:'bar'

            });
    });

    $(function () {");
            WriteLiteral("\n        var chartName = \"chart2\";\r\n        var ctx = document.getElementById(chartName).getContext(\'2d\');\r\n        var data = {\r\n            labels: ");
            EndContext();
            BeginContext(3923, 17, false);
#line 105 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
               Write(Html.Raw(XLabels));

#line default
#line hidden
            EndContext();
            BeginContext(3940, 60, true);
            WriteLiteral(",\r\n                datasets: [{\r\n                    label: ");
            EndContext();
            BeginContext(4001, 24, false);
#line 107 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                      Write(Html.Raw(MembershipFees));

#line default
#line hidden
            EndContext();
            BeginContext(4025, 192, true);
            WriteLiteral(",\r\n                    backgroundColor: \'rgba(200, 100, 10, 0.3)\',\r\n                    borderColor: \'rgba(200, 100, 10, 0.3)\',\r\n                    borderWidth: 1,\r\n                    data: ");
            EndContext();
            BeginContext(4218, 31, false);
#line 111 "C:\Users\Paula\source\repos\DanceClubs\DanceClubs\Views\Report\Chart.cshtml"
                     Write(Html.Raw(YValuesMembershipFees));

#line default
#line hidden
            EndContext();
            BeginContext(4249, 1016, true);
            WriteLiteral(@"
                }]
        };

        var options = {
                maintainAspectRatio: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: false
                        },
                        gridLines: {
                            display: true,
                            color: ""rgba(255,99,164,0.2)""
                        }
                }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
        };

        var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type:'line'

            });
    });

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ReportModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
